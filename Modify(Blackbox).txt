// Modify file from drive 
function modifyFileInGoogleDrive(fileId, newName){
  return new Promise((resolve, reject)=>{
    let fileMetadata = {name : newName};
    drive.files.update({fileId: fileId, resource: fileMetadata}, (err, file) =>{
        if(err) reject(err);
        else resolve(file);
    })
  })
}

//Route for editing a file from  the Google Drive API
app.put('/edit-drive/:id', async (req, res) => {
  //Getting the token from the header of the request and verifying it's not null or undefined
  let token = req.headers['token'];
  if(!token || typeof token == "undefined") return res.status(401).send("Unauthorized");
  
  try{
    
    //Verifying if the user is authenticated with google
    let payload = jwt.verify(token, process.env.JWT_SECRET);
    if (!payload) return res.status(401).json({ msg: 'Token is invalid' });

    //Checking if the id exists in the database
    let files = await Files.findOne({where:{id:req.params.id}});
    if(!files) return res.status(400).json({msg:"The provided id doesn't exist"});

    //If everything goes well we can edit the file on the server side
    let editedFile=await modifyFileInGoogleDrive(files.googleId, req.body.newName ? req.body.newName : files.name , req.file)
    // let editedFile = await modifyFileInGoogleDrive(files.googleId , req.body.newName);
    files.name=editedFile.data.name;
    await files.save();
    res.json(editedFile.data);
  }catch(e){
      console.log(e);
      res.status(500).json({msg:'Internal Server Error'})
  }
});